
Tut 7 - JINJA template inheritance -
Hum logo ne bahot mushkil se index wala page ka bootstrap load karwaya hai. But baki ke sare pages me agar karenge
so its very lengthy and if the site has too many pages than also its very difficult.. So here comes JINJA template
inheritance.
Humlog layout.html naam se ek base file bana ke usko har page ke liye inherit kar lenge. Layout.html me repeated
header footer wala code likhenge.
How we did that?
layout.html me header footer ka code cut paste. and for body 1 line code.
In pages files - 1st line me extends karenge. Fir wo jo body wala code syntax tha uske beech me body ka code rahega.
And do this in all the web pages.
Explanation -
layout ka code inherit hone se accessible ho gya samjlo upar ka sara code a gya. header ho gya. body wala code ek
tarah se override ho gya kyuki wo web pages wali file me likha gya tha. And similarly footer ka code a gya.


TUT 8 - class - ye hamari database ki tables ko define karegi
# params=params means param ko pass kardo template me matlab ki html ke andar chala gya. Ab wha se access
kar sakte hain and then hum html me jinja templating use kar lenge.

(ACTUALLY ME HOTA YE HAI KI HUM JIS WEBSITE SE INTERACT KAR RHE HOTE HAIN TO ACTUALLY ME HTML FILE SE INTERACTION
 HO RHA HOTA HAI ISLIYE HTML ME JINJA TEMPLATING SE LIKH DETE HAIN LEKIN AB JINJA TEMPLATING KA ASLI CODE PYTHON FILE
 LIKHNA PADTA HAI. SO THE FLOW IS FROM HTML -> PYCHARM.)

@app.route("/contact", method = ['GET', 'POST']) Here in this line GET is used to fetch image and url from the
server.
Then Adding - here sno isliye ni liye because wo database me auto increment set hai and uske liye wha phle ek
value bhi insert karni padegi.

Why we are making config.json?
Humne ye jo main.py me code likha hai wo agar koi aur padhega to usko har cheez samajhne ke liye pura code
line by line padhna padega. Like how did I added the title , the contents of the database table, my attributes
and else. and If he wants to change it according to him then it would be difficult.
 
So we made a json file inh which hum ek template type ka define kar denge jisse sirf yha change karne se main
file change ho jaye and is tarah se hum log ek hi site me se bahot sari copies bana sakte hain ye json file 
me parameters badal badal ke. And for this we write a general code in the main file.

Loacl uri is when we are using localhost and prod_uri is when we are using the database at production level
for later use.


TUT11 -
# app.config.update() - Ye tareeka hai apni gmail id se mail bhejne ka
# flaskmail use karne se jab humara user contact foem bhar ke send karega to mail bhi ayega
# app.config.update() inside - gmail ka smtp server hota hai, default port, encryption chahiye - True
# ***** config.json ke andar double quotes me rahega sab and don't add any comments in json file.******
# .send_message ka use karne ke baad permission bhi deni padegi. Because jo humne sign in attempt kiya hai
  flask app se block kar diya hai.

FLASK MAIL
Humne jo json file me gmail-user and gmail-password parameters banaye hain usme ek email id use ki hai and
uska password use hua hai.
What is happening?
Jab koi user contact karta hai to uska data database me store ho jata hai. Fir wha se humko recipients wali mail ids
me mail bheja jata hai.
How is mail send?
flask app function call hone me Jo email id, Password humne diya hai usse gmail id ke smtp server me login karta
hai aur login karne ke baad recipients wali ids me email send kar deta hai. In our application humne reciepients
me apni whi mail id di hai.
Kyuki ek bahar ka app hamari email id me login kar rha tha so google blocked it and we had to give the permission.

TUT 12 - Creating the post - first we have to make an entry point since its a new page.
 and we'll use @route similarly.

@app.route("/post/<string:post_slug>", methods = ['GET']) Here -
# we had added slug. Its datatype is string.
# firstly we will fetch it. Posts class me jake query karenge.
# .first means that if slug with same name comes then fetch the first one

post.html me humne config.json ka use ni kiya. So database me record add karke hum customisable post bana sakte hain
post ke liye humne data database se fetch kiya hai and jinja templating se html me use kiya hai.
post ke andar img bhi database se fetch hogi to uske liye bhi jinja use hoga but uske liye bahar ek var banana hoga.

Samaya ke sath humare post increase honge and hum kuch fixed no. of posts dikhayenge. and for that we have defined
no_of_posts in config.json

TUT 15
There is a login panel. If else conditionals are used there. If Username pass are correct then redirect to the
admin panel and if incorrect then return the same page.
But jab user already logged in hoga tab usko ye sab kyu karwana. Isliye hum shuru me pehle check karenge if else se
ki logged in hai ki ni.

sab set hone ke baad we will get an error because password use karne ke liye Flask me secret key banani padti hai
in session part.

Humlog ek LOGOUT button bhi bananyenge because abhi kisi bhi tareeke se hum logout ni kar sakte koi bhi kisi bhi
tab me admin panel khol ke changes kar sakta hai

TUT 16
We will see how to edit the post in dashboard from the edit button
Strategy - when sno is 0 then we are adding a new post and if sno is else then we are editing the post.
It will give us 2 options - 1.We can add a post from there if we do not have any post and slug for that is 0.
(Later we have added this add feature in seperate button)
2. We can edit our posts from dashboard itself and we need not to go to database for changing except two options sno
because it is primary key and date jisse farziwada na ho.

# Jab user logged in hai to..
# If post request mari gyi hai to sare ke sare parameters lelo

# What is happening - humlog jab form bhar ke edit karenge to wo html me 'name'
# attribute ki help se utha liya jayega & pass kar denge idhar aur wo naya wala assign ho jayega
# box_title wale var me and then hum wo sab ko apne database me add kar denge jaise phle kare the. 

# suppose sno1 wala edit karne ke liye open kare to wo wala fetch hogafilter hoke
# wo ab form hi hoga jo ki hum edit kar skate hain. Usme hum edit kar denge jo ki
# HTML se utha ke upar form.get se ake naye variables me store ho jayega and then assign ho jayega

secure filename ek function hai jo help karta hai - 
- Jo uploader humne banaya hai usko agar hum backend me use kar rhe hain to koi dikkat ni hai
  but agar hum usko public kar rhe hain to hume bahot carefull rahna padega because agar humare server
  me php use hui hai to koi php file upload kar sakta hai. And hume dhyan rakhna padega extension konsa
  upload kar rhe hain log.
  Isliye secure_filename use hota hai jisse server pe koi bahar ka admi changes na kar sake.

LOGOUT - logout function bana ke session variable ko kill kar denge.


TUT 19 -
Logic for Pagination -
There could be 3 scenerios - ya to First page me ho, ya to kisi Middle page me, ya to Last page me. 
First page me hoga to - Previous button se kuch ni hoga, Next button se page+1 ho jayega.
Middle page me hoga to - Previous button se page-1, Next button se page+1 ho jayega.
Last page me hoga to - Previous button se page-1, Next button se kuch ni hoga.

How many pages to be made?
total no. of posts pata kar ke ek page me kitni posts hai us hisab se dikha denge. Aur integer ki
ceiling value lenge.

# Humne pehle slicing karke limited number of posts show kare the but ab hum pure posts ko fetch
karenge because we need them. Insted we will slice the posts after applying the logic.

TUT 23 - 
I HAVE COMMENTED OUT THE FLASK MAIL PART SO MAIL WILL NOT BE SENT BUT CONTACT DETAILS WILL BE ADDED IN THE DATABASE.
IF YOU WANT TO USE THE MAILING SYSTEM THEN UNCOMMENT THE LINE IN CONTACTS PART IN MAIN.PY AND ALSO WRITE YOUR 
EMAILID AND ITS PASSWORD SO THAT MAIL COULD BE SENT. 
